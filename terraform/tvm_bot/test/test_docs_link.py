# flake8: noqa
import textwrap
import logging

from tvm_bot import github_pr_comment

from utils import parameterize_named, assert_in, patch_github


# pylint: disable=line-too-long
@parameterize_named(
    basic=dict(
        target_url="https://ci.tlcpack.ai/job/tvm/job/PR-11594/3/display/redirect",
        commit_sha="SHA",
        expected="Commenting "
        + textwrap.dedent(
            """
        <!---bot-comment-->

        Thanks for contributing to TVM! Please refer to the contributing guidelines https://tvm.apache.org/docs/contribute/ for useful information and tips. Please request code reviews from [Reviewers](https://github.com/apache/incubator-tvm/blob/master/CONTRIBUTORS.md#reviewers) by @-ing them in a comment.
        
        <!--bot-comment-docs-start-->
         * Built docs for commit SHA can be found [here](https://pr-docs.tlcpack.ai/PR-11594/3/docs/index.html).<!--bot-comment-docs-end-->
        
        <sub>Generated by [tvm-bot](https://github.com/apache/tvm/blob/main/ci/README.md#github-actions)</sub>
        """
        ).strip(),
    )
)
# pylint: enable=line-too-long
def test_docs_link(caplog, monkeypatch, target_url, commit_sha, expected):
    """
    Test PR comment with team tags
    """
    commit = {
        "oid": commit_sha,
        "statusCheckRollup": {
            "contexts": {
                "nodes": [
                    {
                        "targetUrl": target_url,
                        "context": "tvm-ci/pr-head",
                    }
                ]
            }
        },
    }
    pr = {
        "number": 1234,
        "title": "abc 123",
        "labels": [],
        "comments": {
            "nodes": [],
        },
        "author": {
            "login": "someone",
        },
        "commits": {
            "nodes": [
                {
                    "commit": commit,
                }
            ],
        },
    }
    data = {
        "[1] POST - https://api.github.com/graphql": {
            "data": {
                "repository": {
                    "pullRequest": pr,
                }
            }
        },
    }

    patch_github(monkeypatch=monkeypatch, test_data=data)

    with caplog.at_level(logging.INFO):
        github_pr_comment.github_pr_comment(
            webhook_pr_data={
                "number": 1234,
            },
            user="apache",
            repo="tvm",
            dry_run=True,
            commenters=["docs"],
        )

    assert_in(expected, caplog.text)

import textwrap
import logging

from tvm_bot import github_pr_comment

from utils import parameterize_named, assert_in, patch_github

MIN_TO_MILLIS = 60 * 1000

# pylint: disable=line-too-long
@parameterize_named(
    significant=dict(
        main_runtime=120 * MIN_TO_MILLIS,
        pr_runtime=200 * MIN_TO_MILLIS,
        expected="Commenting "
        + textwrap.dedent(
            """
        <!---bot-comment-->
        
        Thanks for contributing to TVM! Please refer to the contributing guidelines https://tvm.apache.org/docs/contribute/ for useful information and tips. Please request code reviews from [Reviewers](https://github.com/apache/incubator-tvm/blob/master/CONTRIBUTORS.md#reviewers) by @-ing them in a comment.
        
        <!--bot-comment-runtime-start-->
         * This PR significantly changed [CI runtime](https://ci.tlcpack.ai/blue/organizations/jenkins/tvm/detail/PR-11594/3/pipeline): +66.67% (120.0m -> 200.0m)<!--bot-comment-runtime-end-->
        
        <sub>Generated by [tvm-bot](https://github.com/apache/tvm/blob/main/ci/README.md#github-actions)</sub>
        """
        ).strip(),
    ),
    not_significant=dict(
        main_runtime=120 * MIN_TO_MILLIS,
        pr_runtime=130 * MIN_TO_MILLIS,
        expected="Commenting "
        + textwrap.dedent(
            """
        <!---bot-comment-->
        
        Thanks for contributing to TVM! Please refer to the contributing guidelines https://tvm.apache.org/docs/contribute/ for useful information and tips. Please request code reviews from [Reviewers](https://github.com/apache/incubator-tvm/blob/master/CONTRIBUTORS.md#reviewers) by @-ing them in a comment.
        
        <!--bot-comment-runtime-start-->
         * This PR had no significant effect on [CI runtime](https://ci.tlcpack.ai/blue/organizations/jenkins/tvm/detail/PR-11594/3/pipeline): +8.33% (120.0m -> 130.0m)<!--bot-comment-runtime-end-->
        
        <sub>Generated by [tvm-bot](https://github.com/apache/tvm/blob/main/ci/README.md#github-actions)</sub>
        """
        ).strip(),
    ),
)
# pylint: enable=line-too-long
def test_runtime(caplog, monkeypatch, main_runtime, pr_runtime, expected):
    """
    Test PR comment with team tags
    """
    commit = {
        "statusCheckRollup": {
            "contexts": {
                "nodes": [
                    {
                        "targetUrl": "https://ci.tlcpack.ai/job/tvm/job/PR-11594/3/display/redirect",
                        "context": "tvm-ci/pr-head",
                    }
                ]
            }
        },
    }
    pr = {
        "number": 1234,
        "title": "abc 123",
        "labels": [],
        "comments": {
            "nodes": [],
        },
        "author": {
            "login": "driazati",
        },
        "commits": {
            "nodes": [
                {
                    "commit": commit,
                }
            ],
        },
    }
    data = {
        "[1] POST - https://api.github.com/graphql": {
            "data": {
                "repository": {
                    "pullRequest": pr,
                }
            }
        },
        "[2] GET - https://ci.tlcpack.ai/blue/rest/organizations/jenkins/pipelines/tvm/runs/?branch=main&start=0&limit=26": [
            {
                "state": "FINISHED",
                "result": "SUCCESS",
                "durationInMillis": main_runtime,
            },
        ],
        "[3] GET - https://ci.tlcpack.ai/blue/rest/organizations/jenkins/pipelines/tvm/runs/?branch=PR-11594&start=0&limit=25": [
            {
                "id": "3",
                "state": "FINISHED",
                "result": "SUCCESS",
                "durationInMillis": pr_runtime,
            }
        ],
    }

    patch_github(monkeypatch=monkeypatch, test_data=data)

    with caplog.at_level(logging.INFO):
        github_pr_comment.github_pr_comment(
            webhook_pr_data={
                "number": 1234,
            },
            user="apache",
            repo="tvm",
            dry_run=True,
            commenters=["runtime"],
        )

    assert_in(expected, caplog.text)

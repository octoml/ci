import textwrap
import pytest
import unittest
import logging

from tvm_bot import github_pr_comment
from tvm_bot import git_utils
import tvm_bot

from utils import parameterize_named, assert_in, patch_github


# pylint: disable=line-too-long
@parameterize_named(
    teams=dict(
        team_issue_body=" - a: @person1\n - team1: @person2",
        title="[a][team1] something",
        is_draft=False,
        expected="Commenting "
        + textwrap.dedent(
            """
        <!---bot-comment-->

        Thanks for contributing to TVM! Please refer to the contributing guidelines https://tvm.apache.org/docs/contribute/ for useful information and tips. Please request code reviews from [Reviewers](https://github.com/apache/incubator-tvm/blob/master/CONTRIBUTORS.md#reviewers) by @-ing them in a comment.

        <!--bot-comment-ccs-start-->
         * cc @person1, @person2 <sub>See [#10317](https://github.com/apache/tvm/issues/10317) for details</sub><!--bot-comment-ccs-end-->

        <sub>Generated by [tvm-bot](https://github.com/apache/tvm/blob/main/ci/README.md#github-actions)</sub> on issues/1234/comments
        """
        ).strip(),
    ),
    no_teams=dict(
        team_issue_body="",
        title="[doesn't exist] something",
        is_draft=False,
        expected="Commenting "
        + textwrap.dedent(
            """
        <!---bot-comment-->

        Thanks for contributing to TVM! Please refer to the contributing guidelines https://tvm.apache.org/docs/contribute/ for useful information and tips. Please request code reviews from [Reviewers](https://github.com/apache/incubator-tvm/blob/master/CONTRIBUTORS.md#reviewers) by @-ing them in a comment.

        <!--bot-comment-ccs-start-->
         * No users to tag found in teams: `doesn't exist` <sub>See [#10317](https://github.com/apache/tvm/issues/10317) for details</sub><!--bot-comment-ccs-end-->

        <sub>Generated by [tvm-bot](https://github.com/apache/tvm/blob/main/ci/README.md#github-actions)</sub> on issues/1234/comments
        """
        ).strip(),
    ),
    no_tags=dict(
        team_issue_body="",
        title="something",
        is_draft=False,
        expected="Commenting "
        + textwrap.dedent(
            """
        <!---bot-comment-->

        Thanks for contributing to TVM! Please refer to the contributing guidelines https://tvm.apache.org/docs/contribute/ for useful information and tips. Please request code reviews from [Reviewers](https://github.com/apache/incubator-tvm/blob/master/CONTRIBUTORS.md#reviewers) by @-ing them in a comment.

        <!--bot-comment-ccs-start-->
         * No users to auto-tag found, no teams are specified in PR title <sub>See [#10317](https://github.com/apache/tvm/issues/10317) for details</sub><!--bot-comment-ccs-end-->

        <sub>Generated by [tvm-bot](https://github.com/apache/tvm/blob/main/ci/README.md#github-actions)</sub> on issues/1234/comments
        """
        ).strip(),
    ),
    commented_tags=dict(
        team_issue_body="",
        title="[something, something-else] something",
        is_draft=False,
        expected="Commenting "
        + textwrap.dedent(
            """
        <!---bot-comment-->

        Thanks for contributing to TVM! Please refer to the contributing guidelines https://tvm.apache.org/docs/contribute/ for useful information and tips. Please request code reviews from [Reviewers](https://github.com/apache/incubator-tvm/blob/master/CONTRIBUTORS.md#reviewers) by @-ing them in a comment.

        <!--bot-comment-ccs-start-->
         * No users to tag found in teams: `something`, `something-else` <sub>See [#10317](https://github.com/apache/tvm/issues/10317) for details</sub><!--bot-comment-ccs-end-->

        <sub>Generated by [tvm-bot](https://github.com/apache/tvm/blob/main/ci/README.md#github-actions)</sub> on issues/1234/comments
        """
        ).strip(),
    ),
    case=dict(
        team_issue_body=" - a: @person1\n - team1: @person2",
        title="[A][TEAM1] something",
        is_draft=False,
        expected="Commenting "
        + textwrap.dedent(
            """
        <!---bot-comment-->

        Thanks for contributing to TVM! Please refer to the contributing guidelines https://tvm.apache.org/docs/contribute/ for useful information and tips. Please request code reviews from [Reviewers](https://github.com/apache/incubator-tvm/blob/master/CONTRIBUTORS.md#reviewers) by @-ing them in a comment.

        <!--bot-comment-ccs-start-->
         * cc @person1, @person2 <sub>See [#10317](https://github.com/apache/tvm/issues/10317) for details</sub><!--bot-comment-ccs-end-->

        <sub>Generated by [tvm-bot](https://github.com/apache/tvm/blob/main/ci/README.md#github-actions)</sub> on issues/1234/comments
        """
        ).strip(),
    ),
    draft=dict(
        team_issue_body="",
        title="[doesn't exist] something",
        is_draft=True,
        expected="Ignoring draft PR",
    ),
)
# pylint: enable=line-too-long
def test_tag_teams(caplog, monkeypatch, team_issue_body, title, is_draft, expected):
    """
    Test PR comment with team tags
    """
    data = {
        "[1] POST - https://api.github.com/graphql": {
            "data": {
                "repository": {
                    "pullRequest": {
                        "isDraft": is_draft,
                        "number": 1234,
                        "title": title,
                        "labels": [],
                        "comments": {
                            "nodes": [],
                        },
                        "author": {
                            "login": "someone",
                        },
                        "commits": {
                            "nodes": [],
                        },
                    }
                }
            }
        },
        "[2] POST - https://api.github.com/graphql": {
            "data": {
                "repository": {
                    "issue": {
                        "number": 10317,
                        "body": team_issue_body,
                        "comments": {
                            "nodes": [],
                        },
                    }
                },
            }
        },
    }

    patch_github(monkeypatch=monkeypatch, test_data=data)

    with caplog.at_level(logging.INFO):
        github_pr_comment.github_pr_comment(
            webhook_pr_data={
                "number": 1234,
            },
            user="apache",
            repo="tvm",
            dry_run=True,
            commenters=["ccs"],
        )

    assert_in(expected, caplog.text)
